package Objetos;
// Generated 03/06/2016 10:35:37 by Hibernate Tools 4.3.1

import Util.FormatoDataHora;
import Util.HibernateUtil;
import java.util.ArrayList;
import java.util.Date;
import java.util.List;
import javax.persistence.CascadeType;
import javax.persistence.ManyToOne;

/**
 * Noticia generated by hbm2java
 */
public class Noticia  implements java.io.Serializable {
     private Integer id;
     private String manchete;
     private Date data;
     private Evento evento;
     private Membro cadastrante;
     private String texto;

    public Noticia() {
    }

    public Noticia(String manchete, String texto, Date data){
        this.manchete = manchete;
        this.texto = texto;
        this.data = data;
    }
    
    public Noticia (String manchete, String texto, Date data, Membro cadastrante){
        this.manchete = manchete;
        this.texto = texto;
        this.data = data;
        this.cadastrante = cadastrante;
    }
    
    public Noticia (Integer id, String manchete, String texto, Date data, Membro cadastrante){
        this.id = id;
        this.manchete = manchete;
        this.texto = texto;
        this.data = data;
        this.cadastrante = cadastrante;
    }
   
    public Integer getId() {
        return this.id;
    }
    
    public void setId(int id) {
        this.id = id;
    }

    public String getManchete() {
        return manchete;
    }

    public void setManchete(String manchete) {
        this.manchete = manchete;
    }

    public Date getData() {
        return data;
    }

    public void setData(Date data) {
        this.data = data;
    }
    
    public Evento getEvento() {
        return this.evento;
    }
    
    public void setEvento(Evento evento) {
        this.evento = evento;
    }
    @ManyToOne(cascade=CascadeType.ALL)
    public Membro getCadastrante() {
        return this.cadastrante;
    }
    
    public void setCadastrante(Membro cadastrante) {
        this.cadastrante = cadastrante;
    }
    public String getTexto() {
        return this.texto;
    }
    
    public void setTexto(String texto) {
        this.texto = texto;
    }
    
    /////////////////////////////////////////////
    
    public static Noticia preencherDadosNoticia(Object[] object, int index){
        Noticia noticia = new Noticia();
        noticia.setId((Integer)object[index]);
        noticia.setManchete((String)object[index+1]);
        noticia.setTexto((String)object[index+2]);
        noticia.setData((Date)object[index+3]);
        //if (object[index+3] != null)
        //    noticia.setMembro(Membro.selectMembroPk((Integer)object[index+3]));
        //if (object[index+4] != null)
        //    noticia.setEvento(Evento.selectEventoPk((String)object[index+4], (Date)object[index+5]));
        
        return noticia;
    }
    
    public static List<Noticia> preencherDadosNoticia(List<Object[]> objects, int index){
        List<Noticia> noticias = new ArrayList();
        for (Object[] obj: objects){
            noticias.add(preencherDadosNoticia(obj, index));
        }
        return noticias;
    }
    
    public static void cadastrarOuAtualizarNoticia(Noticia noticia) throws Exception{
        HibernateUtil.persistirObjeto(noticia);
    }
    
    public static void cadastrarOuAtualizarNoticia(String manchete, String texto) throws Exception{
        Date data = FormatoDataHora.getDataHoraAtual();
        Noticia noticia = new Noticia(manchete,texto,data);
        HibernateUtil.persistirObjeto(noticia);
    }
    
    public static void cadastrarOuAtualizarNoticia(String manchete, String texto, Membro cadastrante) throws Exception{
        Date data = FormatoDataHora.getDataHoraAtual();
        Noticia noticia = new Noticia(manchete,texto,data,cadastrante);
        HibernateUtil.persistirObjeto(noticia);
    }
    
    public static void cadastrarOuAtualizarNoticia(Integer id, String manchete, String texto, Membro cadastrante, Date data) throws Exception{
        Noticia noticia = new Noticia(id,manchete,texto,data,cadastrante);
        HibernateUtil.persistirObjeto(noticia);
    }
    
    public static void deletarNoticia(Noticia noticia) throws Exception{
        HibernateUtil.deletarObjeto(noticia);
    }
    
    public static Noticia selectNoticiaPk(int id){
        List<Object[]> objects = HibernateUtil.getTuplasDaTabela("Noticia", "id="+id,"",0);
        return preencherDadosNoticia(objects.get(0), 0);
    }

    public static List<Noticia> listarTodos(){
        List<Object[]> objects = HibernateUtil.getTuplasDaTabela("Noticia");
        return preencherDadosNoticia(objects, 0);
    }
    
    public static List<Noticia> listarTodos(Ordem ordem){
        List<Object[]> objects = HibernateUtil.getTuplasDaTabela("Noticia","","data_noticia "+ordem.getSqlOrder() +", id "+ ordem.getSqlOrder(),0);
        return preencherDadosNoticia(objects, 0);
    }
    
    public static List<Noticia> selectNoticiaContemAssunto(String assunto){
        List<Object[]> objects = HibernateUtil.getTuplasDaTabela("noticia", "manchete like '%"+assunto+"%'", "id DESC", 0);
        return preencherDadosNoticia(objects, 0);
    }
    
}


