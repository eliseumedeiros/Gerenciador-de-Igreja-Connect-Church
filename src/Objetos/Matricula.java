package Objetos;
// Generated 03/06/2016 10:35:37 by Hibernate Tools 4.3.1


import Util.FormatoDataHora;
import Util.HibernateUtil;
import java.util.Date;
import java.util.HashSet;
import java.util.List;
import java.util.Set;

/**
 * Matricula generated by hbm2java
 */
public class Matricula  implements java.io.Serializable {
     private MatriculaId id;
     private Membro aluno;
     private Turma turma;
     private Float notaFinal;
     private Set assiduidades = new HashSet(0);

    public Matricula() {
        this.id = new MatriculaId();
    }

    public Matricula(Membro membro, Turma turma) {
        this.id = new MatriculaId();
        setAluno(membro);
        setTurma(turma);
    }
    public Matricula(Membro membro, Turma turma, Float notaFinal, Set assiduidades) {
        this.id = new MatriculaId();
        setAluno(membro);
        setTurma(turma);
        this.notaFinal = notaFinal;
        this.assiduidades = assiduidades;
    }
   
    public MatriculaId getId() {
        return this.id;
    }
    
    public void setId(MatriculaId id) {
        this.id = id;
    }
    public Membro getAluno() {
        return this.aluno;
    }
    
    public final void setAluno(Membro aluno) {
        this.aluno = aluno;
        this.id.setIdAluno(aluno.getId());
    }
    public Turma getTurma() {
        return this.turma;
    }
    
    public final void setTurma(Turma turma) {
        this.turma = turma;
        this.id.setCodDisc(turma.getId().getCodigo());
        this.id.setDataInicio(turma.getId().getDataInicio());
    }
    public Float getNotaFinal() {
        return this.notaFinal;
    }
    
    public void setNotaFinal(Float notaFinal) {
        this.notaFinal = notaFinal;
    }
    public Set getAssiduidades() {
        return this.assiduidades;
    }
    
    public void setAssiduidades(Set assiduidades) {
        this.assiduidades = assiduidades;
    }
    
    /////////////////////////////////////////////////////////////////////////////////
    
    public static Matricula preencherDadosMatricula(Object[] object, int index){
        Matricula matricula = new Matricula();
        matricula.getId().setCodDisc((String)object[index]);
        matricula.getId().setDataInicio((Date)object[index+1]);
        if (object[index] != null)
            matricula.setNotaFinal((Float)object[index+2]);
        return matricula;
    }
    
    public static void cadastrarMatricula(Turma turma, Membro aluno) throws Exception{
        Matricula matricula = new Matricula(aluno,turma);
        HibernateUtil.persistirObjeto(matricula);
    }

    public static void cadastrarMatricula(Matricula matricula) throws Exception{
        HibernateUtil.persistirObjeto(matricula);
    }
    
    public static void deletarMatricula(Matricula matricula) throws Exception{
        HibernateUtil.deletarObjeto(matricula);
    }
    
    public static Matricula selectMatriculaPk(int idAluno, String codDisc, Date dataInicio){
        List<Object[]> objects = HibernateUtil.getTuplasDaTabela("(pessoa natural join membro) join matricula on id=id_aluno", "id_aluno="+idAluno +" and cod_disc='"+codDisc+"' and data_inicio='"+FormatoDataHora.sqlData(dataInicio)+"'", "", 0);
        Membro membro = Membro.preencherDadosMembro(objects.get(0), 0);
        Matricula matricula = preencherDadosMatricula(objects.get(0), 22);
        matricula.setAluno(membro);
        return matricula;
    }

    public void cadastrarAssiduidade(Date data, boolean presenca) throws Exception{
        Assiduidade assiduidade = new Assiduidade(data,this,presenca);
        Assiduidade.cadastrarOuAtualizarAssiduidade(assiduidade);
    }

    public void cadastrarAssiduidade(Assiduidade assiduidade) throws Exception{
        Assiduidade.cadastrarOuAtualizarAssiduidade(assiduidade);
    }
}


