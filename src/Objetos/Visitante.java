package Objetos;
// Generated 03/06/2016 10:35:37 by Hibernate Tools 4.3.1


import Util.HibernateUtil;
import java.util.ArrayList;
import java.util.Date;
import java.util.HashSet;
import java.util.List;
import java.util.Set;

/**
 * Visitante generated by hbm2java
 */
public class Visitante  implements java.io.Serializable {
     private int id;
     private Pessoa pessoa;
     private String igrejaOrig;
     private Set eventos = new HashSet(0);

    public Visitante() {
    }

	
    public Visitante(Pessoa pessoa) {
        this.pessoa = pessoa;
    }
    
    public Visitante(Pessoa pessoa, String igrejaOrig) {
       this.pessoa = pessoa;
       this.pessoa.setVisitante(this);
       this.igrejaOrig = igrejaOrig;
    }
    
    public Visitante(Pessoa pessoa, String igrejaOrig, Set eventos) {
       this.pessoa = pessoa;
       this.pessoa.setVisitante(this);
       this.igrejaOrig = igrejaOrig;
       this.eventos = eventos;
    }
   
    public int getId() {
        return this.id;
    }
    
    public void setId(int id) {
        this.id = id;
    }
    public Pessoa getPessoa() {
        return this.pessoa;
    }
    
    public void setPessoa(Pessoa pessoa) {
        this.pessoa = pessoa;
    }
    public String getIgrejaOrig() {
        return this.igrejaOrig;
    }
    
    public void setIgrejaOrig(String igrejaOrig) {
        this.igrejaOrig = igrejaOrig;
    }
    public Set getEventos() {
        return this.eventos;
    }
    
    public void setEventos(Set eventos) {
        this.eventos = eventos;
    }
    
    //////////////////////////////////////////
    
    public static Visitante preencherDadosVisitante(Object[] object, int index){
        Pessoa p = Pessoa.preencherDadosPessoa(object,index);
        Visitante visitante = new Visitante();
        visitante.setPessoa(p);
        if (object[index+12] != null)
            visitante.setIgrejaOrig((String)object[index+12]);
        visitante.setId((Integer)object[index]);
        return visitante;
    }
     
    public static List<Visitante> preencherDadosVisitante(List<Object[]> objsList, int index){
        List<Visitante> visitante = new ArrayList();
        for (Object[] objs : objsList) {
           visitante.add(preencherDadosVisitante(objs,index));
        }
        return visitante;
    }
    
    public static void cadastrarOuAtualizarVisitante(Visitante visitante) throws Exception{
        HibernateUtil.persistirObjeto(visitante);
    }
    
    public static void deletarVisitante(Visitante visitante) throws Exception{
        HibernateUtil.deletarObjeto(visitante);
    }
    
    public static Visitante selectVisitantePk(int id){
        List<Object[]> objects = HibernateUtil.getTuplasDaTabela("Pessoa natural join Visitante", "id="+id,"",0);
        return preencherDadosVisitante(objects.get(0),0);
    }

    public static List<Visitante> listarTodos(){
        List<Object[]> objects = HibernateUtil.getTuplasDaTabela("Pessoa natural join Visitante","","",0);
        return preencherDadosVisitante(objects,0);
    }
    
    public static List<Visitante> selectVisitantePorNome(String nome){
        List<Object[]> objects = HibernateUtil.getTuplasDaTabela("pessoa natural join visitante", "nome like '%"+nome+"%'", "nome ASC, sobrenome ASC", 0);
        return preencherDadosVisitante(objects, 0);
    }
    
    public static List<Visitante> selectVisitantePorNome(String nome, String sobrenome){
        List<Object[]> objects = HibernateUtil.getTuplasDaTabela("pessoa natural join visitante", "nome like '%"+nome+"%' and sobrenome like '%"+sobrenome+"%'", "", 0);
        return preencherDadosVisitante(objects, 0);
    }

}


